;-----------------------------------------------------------------------------
;
;                             ìëíÄçéÇäÄ éë
;
;-----------------------------------------------------------------------------
.MODEL TINY
.STACK 100H
.CODE
START:      
;-----------------------------------------------------------------------------
;
;                          çÖéÅïéÑàåõÖ èÖêÖåÖççõÖ
;
;-----------------------------------------------------------------------------
JMP DATA_USTANOVKA
                  FAT           DB 3072 DUP (0)
                  I             DB 0
                  J             DW 0
                  SECTOR_MAS    DW 0
                  DOR           DB 0
                  STOR          DB 0
                  SECT          DB 0
                  WI            DW 0
                  NEW_SECTOR    DW 0
DATA_USTANOVKA:
;-----------------------------------------------------------------------------
;
;                          çÖéÅïéÑàåõÖ ÑÖâëíÇàü
;
;-----------------------------------------------------------------------------
CALL FAT_PROPIS_SEVEN_BAIT
CALL FAT_PROC_WRITE_BEGIN_OS
;-----------------áÄçàåÄÖå 8 ëÖäíéê èéÑ ÉãÄÇçìû èÄèäì-------------------------
CALL CREATE_NEW_SECTOR
CALL FAT_WRITE 
EXIT:
     MOV AX,4C00H
     INT 21H
;-----------------------------------------------------------------------------
;
;                          çÖéÅïéÑàåõÖ èêéñÖÑìêõ
;
;-----------------------------------------------------------------------------
FAT_PROPIS_SEVEN_BAIT PROC
                           MOV SI,OFFSET CS:FAT
                           MOV CX,64           
                           CIKL_FATE:
                                     MOV AL,1
                                     MOV CS:[SI],AL
                                     INC SI
                           LOOP CIKL_FATE 
                           RET
FAT_PROPIS_SEVEN_BAIT ENDP
;-----------------------------------------------------------------------------
FAT_PROC_WRITE_BEGIN_OS PROC
    ;-------------------------------------------------------------------------
    MOV CS:I,2  ;çÄóÄãúçõâ ëÖäíéê ¸2 (1 ëÖäíéê - áÄÉêìáóàä)
    MOV CS:J,0
    ;-------------------------------------------------------------------------
    MOV AX,CS
    MOV ES,AX
    ;-------------------------------------------------------------------------
    MOV CX,6           
    CIKL_FAT:
             PUSH CX
             ;----------------------------------------------------------------
             MOV AH,03H
             MOV AL,01       
             LEA BX,CS:FAT     
             ADD BX,CS:J      
             MOV CH,0         
             MOV CL,CS:I   
             MOV DH,0         
             MOV DL,0       
             INT 13H   
             ADD CS:J,512       
             INC CS:I            
             ;----------------------------------------------------------------
             POP CX
    LOOP CIKL_FAT
    ;-------------------------------------------------------------------------
    RET
FAT_PROC_WRITE_BEGIN_OS ENDP
;-----------------------------------------------------------------------------
;
;                          ëéáÑÄÖå äéêçÖÇìû èÄèäì
;
;-----------------------------------------------------------------------------
CREATE_NEW_SECTOR PROC
          MOV AX,0
          MOV CS:WI,AX
          ;------------------- 
          MOV SI,OFFSET CS:FAT
          MOV CX,2880  
          MOV AL,0
          ;------------------------
          CIKL_NEW_MAS_SECTOR_MAS:
                 CMP CS:[SI],AL
                 JE OK
                 ;------------------------------------------------------------
                 INC SI
                 INC CS:WI                     
          LOOP CIKL_NEW_MAS_SECTOR_MAS
          ;-------------------------------------------------------------------
OK:       MOV AX,CS:WI
          INC AX                                 
          MOV CS:NEW_SECTOR,AX                     
          ;-------------------------------------------------------------------
          MOV SI,OFFSET CS:FAT
          DEC AX
          ADD SI,AX   
          MOV AL,1
          MOV CS:[SI],AL       
          RET
CREATE_NEW_SECTOR ENDP
;-----------------------------------------------------------------------------
;
;                       Ççéëàå àáåÖçÖçàü Ç íÄÅãàñì
;
;-----------------------------------------------------------------------------
FAT_WRITE PROC
         XOR AX,AX
         MOV CS:J,AX
         ;--------------------------------------------------------------------
         MOV CX,6
         MOV AX,2      ;çÄóàçÄÖå ëé ÇíéêéÉé ëÖäíéêÄ                       
         MOV CS:SECTOR_MAS,AX 
         CIKL_FAT_WRITE:
                        PUSH CX
                        ;------
                        CALL SECTOR          
                        CALL WRITE_SECTOR    
                        ADD CS:J,512
                        ;-------------
                        MOV AX,CS:SECTOR_MAS
                        INC AX             
                        MOV CS:SECTOR_MAS,AX 
                        ;-------------------
                        POP CX
         LOOP CIKL_FAT_WRITE        
         RET
FAT_WRITE ENDP
;-----------------------------------------------------------------------------
;
;                 èÖêÖÇéÑ àá ãéÉàóÖëäéÉé ëÖäíéêÄ Ç îàáàóÖëäàâ
;
;-----------------------------------------------------------------------------
SECTOR PROC
      MOV AX,CS:SECTOR_MAS
      MOV BX,AX
      CMP AX,1440
      JG STOR_ONE
      ;-----------------------------------------------------------------------
      MOV CS:STOR,0
      MOV CL,18
      DIV CL    
      CMP AH,0  
      JNE NET_OST
      ;-----------------------------------------------------------------------
      DEC AX  
      MOV CS:DOR,AL
      MOV DL,18
      MOV CS:SECT,DL
      JMP EXIT_SECTOR   
      ;-----------------------------------------------------------------------
      NET_OST:
      MOV CS:DOR,AL
      MOV CS:SECT,AH   
      JMP EXIT_SECTOR
      ;-----------------------------------------------------------------------
      STOR_ONE:
      MOV CS:STOR,1
      SUB AX,1440
      MOV CL,18
      DIV CL  
      CMP AH,0 
      JNE NET_OST1
      ;-----------------------------------------------------------------------
      DEC AX                                                    
      MOV CS:DOR,AL
      MOV DL,18
      MOV CS:SECT,DL
      JMP EXIT_SECTOR                                       
      ;-----------------------------------------------------------------------
      NET_OST1:                                                
      MOV CS:DOR,AL
      MOV CS:SECT,AH
      EXIT_SECTOR:RET
SECTOR ENDP
;-----------------------------------------------------------------------------
;
;                           îàáàóÖëäÄü áÄèàëú çÄ Ñàëä
;
;-----------------------------------------------------------------------------
WRITE_SECTOR PROC
       PUSH CS
       POP ES
       ;--------
       MOV AH,03
       MOV AL,01        
       MOV DI,OFFSET CS:FAT
       ADD DI,CS:J    
       MOV BX,DI       
       MOV CH,CS:DOR    
       MOV CL,CS:SECT   
       MOV DH,CS:STOR   
       MOV DL,00       
       INT 13H   
       RET
WRITE_SECTOR ENDP
;-----------------------------------------------------------------------------
END START




